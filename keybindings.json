// Place your key bindings in this file to override the defaults
[   

    // scroll through autocomplete w/o hitting arrow keys
    {
      "key": "ctrl+n",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "ctrl+p",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    
    // cursor ijkl
    {
        "key": "ctrl+j",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },    
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "cursorUp",
        "when": "textInputFocus && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "ctrl+k",
        "command": "cursorDown",
        "when": "textInputFocus && notebookEditorCursorAtBoundary != 'bottom'"
    },

    // cursor selects
    {
        "key": "ctrl+shift+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },    
    {
        "key": "ctrl+shift+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },

    // cursor word jumps
    {
        "key": "ctrl+h",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+;",
        "command": "cursorWordRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+h",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+;",
        "command": "cursorWordRightSelect",
        "when": "textInputFocus"
    },

    // large cursor jumps
    {
        "key": "ctrl+alt+j",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+h",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+;",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },

    // large cursor jump selects
    {
        "key": "ctrl+alt+shift+j",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+shift+l",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+shift+h",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+shift+;",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+shift+i",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+shift+k",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
    },


    // notebook navigation keybinds up and down

      {
        "key": "ctrl+i",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
        "key": "ctrl+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
      },
      {
        "key": "ctrl+k",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
      },
      {
        "key": "ctrl+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },

    // removed keybindings
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+i",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    }

]
